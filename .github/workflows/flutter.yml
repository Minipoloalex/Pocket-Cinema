# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      # - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      
      - name: Create API key file
        run: echo "const newsApiKey = 'mega trollada';" > pocket_cinema/lib/controller/api_key.dart
      
      - name: Install dependencies
        # working-directory: ./pocket_cinema
        run: |
          cd pocket_cinema
          flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each 
      # commit. - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        # working-directory: ./pocket_cinema
        run: |
          cd pocket_cinema
          flutter analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        # working_directory: ./pocket_cinema
        run: |
          cd pocket_cinema
          flutter test
      # - name: Run Gherkin tests
      #   run: |
      #     cd pocket_cinema
      #     flutter test test_driver/app_test.dart -d all
      #     # flutter drive --target=test_driver/app.dart --driver=test_driver/app_test.dart
